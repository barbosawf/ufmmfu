% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/comb_map.R
\name{comb_map}
\alias{comb_map}
\title{Combine a double-input function operation}
\usage{
comb_map(vec_list_df, .f = `+`, ...)
}
\arguments{
\item{vec_list_df}{A vector, list or data frame.}

\item{.f}{A double input-function.}

\item{...}{Additional arguments for the double-input function (if needed).}
}
\value{
Returns a list with \verb{[n * (n - 1)]/2} elements resulting from the double-input function operation (defined in \code{.f}) combining the \code{n} elements of the object defined in \code{vec_list_df}.
}
\description{
Combine a double-input function operation
}
\details{
This function should be used especially in cases where the input order of the arguments of the double-input function defined in \code{.f} DOES NOT matters (ex. \code{+}).
\itemize{
\item Functions such as \code{setdiff()} is not a good option (input order matters);
\item Dot-dot-dot functions are also allowed (ex. \code{sum()});
\item If possible, functions with a formula input can be modified to a double-input function (\verb{see examples}).
}
}
\examples{
# Load imports
library(dplyr)

# Operation on a vector (default: `+`)
c(a = 1, b = 2, c = 3, d = 4) |>
  comb_map()

# Operation on a list (intersection between elements)
list(a = 1:5, b = 4:10, c = 3:5, d = 8:12) |>
  comb_map(intersect)

# Operation on a data frame (linear model)
lm_mod <- function(y, x) {
  lm(y ~ x)
}

mtcars |>
  select_at(vars(disp:wt)) |>
  comb_map(lm_mod)
}
\seealso{
\code{\link[=permute_map]{permute_map()}} for permuting instead of combining.
}
